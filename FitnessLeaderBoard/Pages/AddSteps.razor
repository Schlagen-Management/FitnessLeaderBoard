@page "/AddSteps"

@using FitnessLeaderBoard.Data.EntityClasses
@using FitnessLeaderBoard.Services
@using FitnessLeaderBoard.Components
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations

@inject StepDataService stepDataService
@inject UserManager<FlbUser> userManager
@inject NavigationManager navigationManager

<div class="row">
    <div class="col-lg-12 text-center">
        <h1 class="h4 my-2">Profile</h1>
    </div>
</div>
<hr>
<div class="row">
    <div class="col-sm-3">
        <!-- Left ad block visible on tablets and up -->
        <AdBlockA />
        <!-- end left ad block -->
    </div>
    <div class="col-sm-4 offset-sm-1">
        <div class="user-profile">
            <EditForm Model="@userInput" OnValidSubmit="@AddUserSteps">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="selectDay">Select Day</label>
                    <InputSelectNumber id="selectDay" class="form-control"
                                       @bind-Value="@userInput.SelectedDay">
                        <option value="-1">Yesterday</option>
                        <option value="0" selected>Today</option>
                    </InputSelectNumber>
                </div>
                <div class="form-group">
                    <label for="stepsTaken">Steps Taken</label>
                    <InputNumber TValue="int" id="stepsTaken" class="form-control"
                                 @bind-Value="@userInput.StepsTaken" />
                    <ValidationMessage For="@(() => userInput.StepsTaken)" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        Add Steps
                    </button>
                    <button type="button" class="btn btn-link" @onclick="@CancelEntry">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
    <div class="col-sm-3 offset-sm-1">
        <!-- Right ad block visible on tablets and up -->
        <AdBlockA />
        <!-- end right ad block-->
        <div class="mobile-advertisement text-center d-block d-sm-none" id="mobile-advertisement"> <img src="https://via.placeholder.com/320x50?text=320x50+AD" alt="Placeholder Ad"> </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>
    authStateTask
    { get; set; }

    public class StepInputModel
    {
        [Required]
        public int SelectedDay { get; set; }

        [Required]
        public int StepsTaken { get; set; }
    }

    // The logged in user's user Id
    private string userId;

    private IDictionary<int, string> availableDays { get; set; }
        = new Dictionary<int, string>() { { -1, "Yesterday" }, { 0, "Today" } };

    private StepInputModel userInput { get; set; }
        = new StepInputModel { SelectedDay = 0, StepsTaken = 0 };

    protected override async Task OnInitializedAsync()
    {
        // Get the user Id
        var authState = await authStateTask;
        userId = authState.User.Identity.IsAuthenticated
            ? userManager.GetUserId(authState.User)
            : string.Empty;

        // If the user is authenticated, retrieve info
        if (authState.User.Identity.IsAuthenticated
            && !string.IsNullOrEmpty(userId))
        {
        }
    }

    private async Task AddUserSteps()
    {
        DateTime date = DateTime.Today.AddDays(userInput.SelectedDay).Date;

        if (await stepDataService.AddUserStepDataForDate(userId, date, userInput.StepsTaken))
        {
            // Navigate back to the home page
            navigationManager.NavigateTo("/", true);
        }
    }

    private async void CancelEntry()
    {
        // Navigate back to the home page
        navigationManager.NavigateTo("/", true);
    }
}